import ubinascii, uos, machine
b64="""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
"""


uartremote=ubinascii.a2b_base64(b64)

try:
    uos.remove('/projects/uartremote.py')
    uos.remove('/projects/uartremote.mpy')
except OSError:
    pass

print('writing uartremote.mpy to folder /projects')
print('writing uartremote.mpy to folder /projects')
f=open('/projects/uartremote.mpy','wb')
f.write(uartremote)
f.close()
print('Finished writing uartremote.mpy. Resetting.')
machine.reset()
