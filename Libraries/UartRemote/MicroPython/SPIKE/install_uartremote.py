import ubinascii, uos, machine
b64="""
"""


uartremote=ubinascii.a2b_base64(b64)

try:
    uos.remove('/projects/uartremote.py')
    uos.remove('/projects/uartremote.mpy')
except OSError:
    pass

print('writing uartremote.mpy to folder /projects')
print('writing uartremote.mpy to folder /projects')
open('/projects/uartremote.mpy','wb').write(uartremote)
print('Finished writing uartremote.mpy')
machine.reset()
